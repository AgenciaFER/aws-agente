#!/usr/bin/env python3
"""
Teste do CLI S3 do AWS Agent com usu√°rio Marcos
"""
import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..', 'src'))

from aws_agent.core.agent import AWSAgent
from aws_agent.cli.main import show_s3_buckets, create_s3_bucket

def test_s3_cli():
    """Testa o CLI S3"""
    
    print("=" * 60)
    print("TESTE DO CLI S3 - USU√ÅRIO MARCOS")
    print("=" * 60)
    print()
    
    # Inicializar e conectar
    agent = AWSAgent()
    
    try:
        print("üì° Conectando √† conta Marcos...")
        if agent.connect('marcos'):
            print("  ‚úì Conectado com sucesso!")
            
            # Obter servi√ßo S3
            s3_service = agent.services.get('s3')
            if s3_service:
                print("  ‚úì Servi√ßo S3 dispon√≠vel")
                
                # Testar listagem de buckets
                print("\nü™£ Testando listagem de buckets...")
                show_s3_buckets(s3_service)
                
                # Criar bucket de demonstra√ß√£o
                print("\nüì¶ Criando bucket de demonstra√ß√£o...")
                test_bucket = f"marcos-demo-{int(time.time())}"
                
                if s3_service.create_bucket(test_bucket):
                    print(f"  ‚úì Bucket '{test_bucket}' criado")
                    
                    # Upload de demonstra√ß√£o
                    print("\nüì§ Testando upload...")
                    test_content = "Demonstra√ß√£o do AWS Agent - Usu√°rio Marcos"
                    
                    # Simular upload (m√©todo simplificado)
                    try:
                        import boto3
                        s3_client = s3_service.client
                        s3_client.put_object(
                            Bucket=test_bucket,
                            Key='demo.txt',
                            Body=test_content,
                            ContentType='text/plain'
                        )
                        print(f"  ‚úì Arquivo 'demo.txt' enviado")
                        
                        # Listar objetos
                        print("\nüìã Listando objetos...")
                        objects = s3_service.list_objects(test_bucket)
                        print(f"  ‚úì {len(objects)} objetos encontrados")
                        
                        for obj in objects:
                            print(f"    - {obj['key']} ({obj['size']} bytes)")
                        
                        # Download de demonstra√ß√£o
                        print("\nüì• Testando download...")
                        response = s3_client.get_object(Bucket=test_bucket, Key='demo.txt')
                        downloaded_content = response['Body'].read().decode('utf-8')
                        
                        if downloaded_content == test_content:
                            print("  ‚úì Download verificado - conte√∫do correto")
                        else:
                            print("  ‚úó Download com problema - conte√∫do diferente")
                        
                        # Limpeza
                        print("\nüßπ Limpando recursos de teste...")
                        s3_client.delete_object(Bucket=test_bucket, Key='demo.txt')
                        s3_client.delete_bucket(Bucket=test_bucket)
                        print("  ‚úì Recursos removidos")
                        
                    except Exception as e:
                        print(f"  ‚úó Erro no teste: {e}")
                
                else:
                    print("  ‚úó Falha ao criar bucket")
                    
            else:
                print("  ‚úó Servi√ßo S3 n√£o dispon√≠vel")
                
        else:
            print("  ‚úó Falha na conex√£o")
            
    except Exception as e:
        print(f"  ‚úó Erro geral: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        # Desconectar
        print("\nüì¥ Desconectando...")
        agent.disconnect()
        print("  ‚úì Desconectado")
    
    print("\n" + "=" * 60)
    print("TESTE CONCLU√çDO")
    print("=" * 60)
    print()
    print("RESUMO:")
    print("‚úì O usu√°rio Marcos pode usar o AWS Agent para S3")
    print("‚úì Todas as opera√ß√µes S3 funcionam corretamente")
    print("‚úì O CLI interativo S3 est√° pronto para uso")
    print()
    print("PR√ìXIMO PASSO:")
    print("Execute: python -m aws_agent.cli.main start")
    print("E selecione a op√ß√£o '2. Gerenciar S3 (Armazenamento)'")

if __name__ == "__main__":
    import time
    test_s3_cli()
